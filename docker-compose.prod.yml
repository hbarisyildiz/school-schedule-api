version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: school-schedule-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./storage:/var/www/storage
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=6379
    depends_on:
      - db
      - redis
    networks:
      - school-network

  webserver:
    image: nginx:alpine
    container_name: school-schedule-webserver
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - ./public:/var/www/public
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - school-network

  db:
    image: mysql:8.0
    container_name: school-schedule-db
    restart: unless-stopped
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    ports:
      - "3306:3306"
    networks:
      - school-network

  redis:
    image: redis:alpine
    container_name: school-schedule-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - school-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: school-schedule-phpmyadmin
    restart: unless-stopped
    environment:
      - PMA_HOST=db
      - PMA_USER=${DB_USERNAME}
      - PMA_PASSWORD=${DB_PASSWORD}
    ports:
      - "8080:80"
    depends_on:
      - db
    networks:
      - school-network

volumes:
  db_data:
  redis_data:

networks:
  school-network:
    driver: bridge
